[{"C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\index.tsx":"1","C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\reportWebVitals.ts":"2","C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\App.tsx":"3","C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\firebaseRTC.ts":"4","C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\helper.ts":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2108,"mtime":1610719867032,"results":"9","hashOfConfig":"7"},{"size":3254,"mtime":1610724016323,"results":"10","hashOfConfig":"7"},{"size":409,"mtime":1610717421128,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zvpur6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\index.tsx",[],["24","25"],"C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\reportWebVitals.ts",[],"C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\App.tsx",["26","27"],"import React , { useState, useEffect } from 'react';\nimport './App.css';\nimport * as FirebaseRTC from './firebaseRTC'\n\nfunction App() {\n  import('rust-wasm').then(({ add_two_ints, fib }) => {\n      // off-loading computations to WASM\n      const sumResult = add_two_ints(10, 20);\n      const fibResult = fib(10);\n      // updating our sumResult and fibResult values (declared below)\n      setSum(sumResult);\n      setFib(fibResult);\n  });\n\n\n   const [joinstate, setJoinState] = useState<string>(\"\");\n   const [roomId, setRoomId] = useState<string>(\"\");\n\n   const [sum, setSum] = useState<number>(0);\n   const [fib, setFib] = useState<number>(0);\n\n   const user = FirebaseRTC.initdatabase()\n\n   async function createBtn() {\n      var result = await FirebaseRTC.createRoom();\n      setJoinState(`created room ${result}`)\n      setRoomId(result);\n   }\n\n   async function joinBtn() {\n      if (roomId != \"\") {\n      var result:boolean = await FirebaseRTC.joinRoom(roomId);\n      setJoinState(`joined room: ${result ? \"success\": \"fail\"}`)\n      }\n   \n   }\n   async function leaveBtn() {\n      if (roomId != \"\") {\n      FirebaseRTC.onClose(roomId)\n      setJoinState(``)\n      }\n   \n   }\n\n   useEffect(() => {\n         console.log(\"on room id change\")\n\n         const onbeforeunloadFn = () => {\n            console.log(\"ran delete\")\n            FirebaseRTC.onClose(roomId)\n         }\n         window.addEventListener('beforeunload', onbeforeunloadFn);\n\n         return () => window.removeEventListener(\"beforeunload\", onbeforeunloadFn);\n     \n   }, [roomId])\n\n   return (\n      // Displaying our sum and fib values that're updated by WASM\n      <div className=\"App\" >\n         <div>Sum Results: {sum}</div>\n         <div>Fib Results: {fib}</div>\n         {user}\n         <input type=\"text\" placeholder=\"firstname\" name=\"name\" onChange={e =>setRoomId(e.target.value)}/>\n         <button onClick={createBtn}>create room</button>\n         <button onClick={joinBtn}>join room</button>\n         <button onClick={leaveBtn}>leave room</button>\n\n         <div>log {joinstate}</div>\n      </div>\n   );\n}\nexport default App;","C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\firebaseRTC.ts",["28","29","30"],"C:\\Users\\simon\\Documents\\GitHub\\dom-client\\react-client\\src\\helper.ts",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":31,"column":18,"nodeType":"37","messageId":"38","endLine":31,"endColumn":20},{"ruleId":"35","severity":1,"message":"36","line":38,"column":18,"nodeType":"37","messageId":"38","endLine":38,"endColumn":20},{"ruleId":"39","severity":1,"message":"40","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":19,"column":7,"nodeType":"41","messageId":"42","endLine":19,"endColumn":33},{"ruleId":"35","severity":1,"message":"44","line":30,"column":12,"nodeType":"37","messageId":"38","endLine":30,"endColumn":14},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Peer' is defined but never used.","Identifier","unusedVar","'serverlist' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]